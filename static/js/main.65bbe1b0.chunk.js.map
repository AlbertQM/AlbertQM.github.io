{"version":3,"sources":["switch.png","switch-sound.mp3","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GENERATIVE_ART_URL","SWITCH_SOUND","Audio","switchAudioUrl","App","useState","thingToDo","setThingToDo","getRandomColor","hoverColor","setHoverColor","x","y","z","gravity","setGravity","useEffect","window","gravitySensor","GravitySensor","frequency","addEventListener","start","error","stop","gravityValue","newMin","newMax","isLightOn","setIsLightOn","hasActivatedSwitch","setHasActivatedSwitch","handleDrag","useCallback","_e","point","play","e","DOMException","prev","a","fetch","resp","json","activity","toLowerCase","style","filter","motion","img","src","switchImgUrl","drag","whileTap","cursor","dragMomentum","dragElastic","dragConstraints","top","bottom","position","left","width","rotate","onDrag","onDragEnd","onContextMenu","preventDefault","className","Avatar","ProjectPoster","whileHover","variants","actionButton","backgroundColor","onMouseLeave","onClick","location","href","ProjectTitle","title","scale","ActivitySuggestion","span","transition","repeat","Infinity","duration","animate","draggable","alt","type","children","div","cx","clickable","Boolean","props","initial","randomHex","Math","floor","random","toString","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65bbe1b0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/switch.5a4fe930.png\";","export default __webpack_public_path__ + \"static/media/switch-sound.0d19c9a6.mp3\";","import React, { useCallback, useEffect, useState } from \"react\";\nimport cx from \"classnames\";\nimport {\n  AnimationProps,\n  DraggableProps,\n  DragHandlers,\n  HoverHandlers,\n  motion,\n  PanInfo,\n} from \"framer-motion\";\n\nimport switchImgUrl from \"./switch.png\";\nimport switchAudioUrl from \"./switch-sound.mp3\";\nimport \"./App.css\";\nimport \"./Reset.css\";\n\nconst GENERATIVE_ART_URL = \"https://albertqm.github.io/generative-art/\";\nconst SWITCH_SOUND = new Audio(switchAudioUrl);\n// Assume people only visit my website from planet Earth\nconst EARTH_GRAVITY = 9.8;\n// Made up type, since there's not an official one for this experimental API?\ntype GravitySensor =\n  | (Pick<Element, \"addEventListener\" | \"removeEventListener\"> &\n      Gravity & {\n        start: () => void;\n        stop: () => void;\n      })\n  | null;\ntype Gravity = {\n  x: number;\n  y: number;\n  z: number;\n};\n\nexport default function App() {\n  const [thingToDo, setThingToDo] = useState<string | undefined>();\n  const [hoverColor, setHoverColor] = useState(getRandomColor());\n  // Mobile only, uses gravity sensor data.\n  const [gravity, setGravity] = useState<Gravity>({ x: 0, y: 0, z: 0 });\n\n  useEffect(() => {\n    if (!(\"GravitySensor\" in window)) {\n      return;\n    }\n\n    let gravitySensor: GravitySensor = null;\n    try {\n      // @ts-expect-error as GravitySensor is still an experimental API\n      gravitySensor = new window.GravitySensor({\n        frequency: 60,\n      }) as NonNullable<GravitySensor>;\n      gravitySensor.addEventListener(\"reading\", () => {\n        const { x, y, z } = gravitySensor!;\n        setGravity({ x, y, z });\n      });\n      gravitySensor.start();\n    } catch (error) {\n      // This is an experimental feature, let's not crash the website, shall we?\n    }\n\n    return () => gravitySensor?.stop();\n  }, []);\n\n  const [isLightOn, setIsLightOn] = useState(true);\n  const [hasActivatedSwitch, setHasActivatedSwitch] = useState(false);\n  const handleDrag: DragHandlers[\"onDrag\"] = useCallback(\n    (_e, { point: { y } }) => {\n      if (hasActivatedSwitch) {\n        return;\n      }\n\n      if (y > 225) {\n        try {\n          SWITCH_SOUND.play();\n        } catch (e) {\n          if (e instanceof DOMException) {\n            // Likely \"play() failed because the user didn't interact with the document first\".\n            // No need to pollute the console with this error.\n          }\n        }\n        setHasActivatedSwitch(true);\n        setIsLightOn((prev) => !prev);\n      }\n    },\n    [hasActivatedSwitch]\n  );\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const resp = await fetch(\"https://www.boredapi.com/api/activity\");\n        const { activity }: { activity: string } = await resp.json();\n        setThingToDo(activity.toLowerCase());\n      } catch (error) {\n        setThingToDo(\n          \"fix the API Albert is using on this website to show a new activity every time\"\n        );\n      }\n    })();\n  }, []);\n\n  return (\n    <div style={{ filter: `brightness(${isLightOn ? 1 : 0.5})` }}>\n      <motion.img\n        src={switchImgUrl}\n        drag=\"y\"\n        whileTap={{ cursor: \"grabbing\" }}\n        dragMomentum={false}\n        dragElastic={0.1} // Make it hard to drag far away (and expose top of switch)\n        dragConstraints={{ top: 0, bottom: 25 }}\n        style={{\n          position: \"absolute\",\n          top: -125,\n          left: 25,\n          width: 100,\n          rotate: `${scaleGravityToRange(gravity.x, -30, 30)}deg`,\n        }}\n        onDrag={handleDrag}\n        onDragEnd={() => setHasActivatedSwitch(false)}\n        onContextMenu={(e) => e.preventDefault()}\n      ></motion.img>\n      <div className=\"container\">\n        <Avatar />\n        <div className=\"intro-container\">\n          {`Hey, I'm Albert. \n          I mostly create Web-related products for a living.`}\n        </div>\n      </div>\n      <ProjectPoster\n        whileHover=\"actionButton\"\n        variants={{ actionButton: { backgroundColor: hoverColor } }}\n        onMouseLeave={() => setHoverColor(getRandomColor())}\n        onClick={() => (window.location.href = GENERATIVE_ART_URL)}\n      >\n        <ProjectTitle\n          title={\n            <motion.a\n              href={GENERATIVE_ART_URL}\n              className=\"project-title\"\n              variants={{ actionButton: { scale: 1.2 } }}\n            >\n              Generative Art\n            </motion.a>\n          }\n        />\n      </ProjectPoster>\n      <ProjectPoster>\n        <ActivitySuggestion thingToDo={thingToDo} />\n      </ProjectPoster>\n      <ProjectPoster>\n        <ProjectTitle\n          title={\n            <motion.span\n              transition={{ repeat: Infinity, duration: 2 }}\n              animate={{ rotate: [-10, 10, -10] }}\n            >\n              More stuff to come...\n            </motion.span>\n          }\n        />\n      </ProjectPoster>\n    </div>\n  );\n}\n\nfunction Avatar() {\n  return (\n    <div className=\"avatar-container\" onContextMenu={(e) => e.preventDefault()}>\n      <motion.img\n        draggable={false}\n        className=\"avatar-img\"\n        src=\"https://avatars.githubusercontent.com/u/33761650?v=4\"\n        alt=\"A photo of Albert's face\"\n        whileHover={{\n          rotate: 360,\n        }}\n        whileTap={{ rotate: 360 }}\n        transition={{\n          type: \"spring\",\n        }}\n      />\n    </div>\n  );\n}\n\nfunction ProjectPoster({\n  children,\n  whileHover,\n  variants,\n  onClick,\n  onMouseLeave,\n}: {\n  children: React.ReactNode;\n  whileHover?: HoverHandlers[\"whileHover\"];\n  variants?: AnimationProps[\"variants\"];\n  onClick?: () => void;\n  onMouseLeave?: () => void;\n}) {\n  return (\n    <motion.div\n      className={cx(\"project-poster\", { clickable: Boolean(onClick) })}\n      whileHover={whileHover}\n      variants={variants}\n      onMouseLeave={onMouseLeave}\n      onClick={onClick}\n    >\n      {children}\n    </motion.div>\n  );\n}\n\nfunction ProjectTitle({ title }: { title: React.ReactNode }) {\n  return <header className=\"project-title\">{title}</header>;\n}\n\nfunction ActivitySuggestion(props: { thingToDo: string | undefined }) {\n  const { thingToDo } = props;\n  return (\n    <div className=\"activity-suggestion\">\n      While I build this, why don't you...\n      {thingToDo && (\n        <motion.div initial={{ y: -500 }} animate={{ y: 0 }}>\n          {thingToDo}?\n        </motion.div>\n      )}\n    </div>\n  );\n}\n\n/**\n * @example\n *         <Knob\n          onDrag={({ x }) => setHueRotate(x)}\n          drag=\"x\"\n          dragConstraints={{\n            left: 0,\n            right: (containerRect?.right ?? window.innerWidth) - 30,\n          }}\n        >\n          🎨\n        </Knob>\n        <Knob\n          onDrag={({ y }) =>\n            setBrightness(\n              1 - y / ((containerRect?.height ?? window.innerWidth) - 30)\n            )\n          }\n          drag=\"y\"\n          dragConstraints={{\n            top: 0,\n            bottom: (containerRect?.bottom ?? window.innerHeight) - 30,\n          }}\n        >\n          💡\n        </Knob>\n */\nfunction Knob({\n  children,\n  onDrag,\n  ...draggableProps\n}: React.PropsWithChildren<\n  {\n    onDrag: ({ x, y }: { x: number; y: number }) => void;\n  } & Omit<DraggableProps, \"onDrag\">\n>) {\n  const handleDrag = useCallback(\n    (_e, { point: { x, y } }: PanInfo) => {\n      onDrag({ x, y });\n    },\n    [onDrag]\n  );\n\n  return (\n    <motion.div\n      className=\"knob\"\n      drag\n      whileDrag={{ scale: 1.1 }}\n      whileTap={{ cursor: \"grabbing\" }}\n      onDrag={handleDrag}\n      dragMomentum={false}\n      {...draggableProps}\n    >\n      {children}\n    </motion.div>\n  );\n}\n\nfunction getRandomColor() {\n  const randomHex = Math.floor(Math.random() * 16777215).toString(16);\n  return `#${randomHex.length < 6 ? randomHex + \"a\" : randomHex}`;\n}\n\nfunction scaleGravityToRange(\n  gravityValue: number,\n  newMin: number,\n  newMax: number\n) {\n  return (\n    ((gravityValue - -EARTH_GRAVITY) * (newMax - newMin)) /\n      (EARTH_GRAVITY - -EARTH_GRAVITY) +\n    newMin\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}