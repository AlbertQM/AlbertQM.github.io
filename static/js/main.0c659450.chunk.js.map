{"version":3,"sources":["switch.png","switch-sound.mp3","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GENERATIVE_ART_URL","SWITCH_SOUND","Audio","switchAudioUrl","App","useState","thingToDo","setThingToDo","getRandomColor","hoverColor","setHoverColor","isLightOn","setIsLightOn","hasActivatedSwitch","setHasActivatedSwitch","handleDrag","useCallback","_e","y","point","play","e","DOMException","prev","useEffect","a","fetch","resp","json","activity","toLowerCase","style","filter","motion","img","src","switchImgUrl","drag","whileTap","cursor","dragMomentum","dragElastic","dragConstraints","top","bottom","position","left","width","onDrag","onDragEnd","className","Avatar","ProjectPoster","whileHover","variants","actionButton","backgroundColor","onMouseLeave","onClick","window","location","href","ProjectTitle","title","scale","ActivitySuggestion","span","transition","repeat","Infinity","duration","animate","rotate","onContextMenu","preventDefault","draggable","alt","type","children","div","cx","clickable","Boolean","props","initial","randomHex","Math","floor","random","toString","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c659450.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/switch.5a4fe930.png\";","export default __webpack_public_path__ + \"static/media/switch-sound.0d19c9a6.mp3\";","import React, { useCallback, useEffect, useState } from \"react\";\nimport cx from \"classnames\";\nimport {\n  AnimationProps,\n  DraggableProps,\n  DragHandlers,\n  HoverHandlers,\n  motion,\n  PanInfo,\n} from \"framer-motion\";\n\nimport switchImgUrl from \"./switch.png\";\nimport switchAudioUrl from \"./switch-sound.mp3\";\nimport \"./App.css\";\nimport \"./Reset.css\";\n\nconst GENERATIVE_ART_URL = \"https://albertqm.github.io/generative-art/\";\nconst SWITCH_SOUND = new Audio(switchAudioUrl);\n\nexport default function App() {\n  const [thingToDo, setThingToDo] = useState<string | undefined>();\n  const [hoverColor, setHoverColor] = useState(getRandomColor());\n\n  const [isLightOn, setIsLightOn] = useState(true);\n  const [hasActivatedSwitch, setHasActivatedSwitch] = useState(false);\n  const handleDrag: DragHandlers[\"onDrag\"] = useCallback(\n    (_e, { point: { y } }) => {\n      if (hasActivatedSwitch) {\n        return;\n      }\n\n      if (y > 225) {\n        try {\n          SWITCH_SOUND.play();\n        } catch (e) {\n          if (e instanceof DOMException) {\n            // Likely \"play() failed because the user didn't interact with the document first\".\n            // No need to pollute the console with this error.\n          }\n        }\n        setHasActivatedSwitch(true);\n        setIsLightOn((prev) => !prev);\n      }\n    },\n    [hasActivatedSwitch]\n  );\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const resp = await fetch(\"https://www.boredapi.com/api/activity\");\n        const { activity }: { activity: string } = await resp.json();\n        setThingToDo(activity.toLowerCase());\n      } catch (error) {\n        setThingToDo(\n          \"fix the API Albert is using on this website to show a new activity every time\"\n        );\n      }\n    })();\n  }, []);\n\n  return (\n    <div style={{ filter: `brightness(${isLightOn ? 1 : 0.5})` }}>\n      <motion.img\n        src={switchImgUrl}\n        drag=\"y\"\n        whileTap={{ cursor: \"grabbing\" }}\n        dragMomentum={false}\n        dragElastic={0.1} // Make it hard to drag far away (and expose top of switch)\n        dragConstraints={{ top: 0, bottom: 25 }}\n        style={{\n          position: \"absolute\",\n          top: -125,\n          left: 25,\n          width: 100,\n        }}\n        onDrag={handleDrag}\n        onDragEnd={() => setHasActivatedSwitch(false)}\n      ></motion.img>\n      <div className=\"container\">\n        <Avatar />\n        <div className=\"intro-container\">\n          {`Hey, I'm Albert. \n          I mostly create Web-related products for a living.`}\n        </div>\n      </div>\n      <ProjectPoster\n        whileHover=\"actionButton\"\n        variants={{ actionButton: { backgroundColor: hoverColor } }}\n        onMouseLeave={() => setHoverColor(getRandomColor())}\n        onClick={() => (window.location.href = GENERATIVE_ART_URL)}\n      >\n        <ProjectTitle\n          title={\n            <motion.a\n              href={GENERATIVE_ART_URL}\n              className=\"project-title\"\n              variants={{ actionButton: { scale: 1.2 } }}\n            >\n              Generative Art\n            </motion.a>\n          }\n        />\n      </ProjectPoster>\n      <ProjectPoster>\n        <ActivitySuggestion thingToDo={thingToDo} />\n      </ProjectPoster>\n      <ProjectPoster>\n        <ProjectTitle\n          title={\n            <motion.span\n              transition={{ repeat: Infinity, duration: 2 }}\n              animate={{ rotate: [-10, 10, -10] }}\n            >\n              More stuff to come...\n            </motion.span>\n          }\n        />\n      </ProjectPoster>\n    </div>\n  );\n}\n\nfunction Avatar() {\n  return (\n    <div className=\"avatar-container\" onContextMenu={(e) => e.preventDefault()}>\n      <motion.img\n        draggable={false}\n        className=\"avatar-img\"\n        src=\"https://avatars.githubusercontent.com/u/33761650?v=4\"\n        alt=\"A photo of Albert's face\"\n        whileHover={{\n          rotate: 360,\n        }}\n        whileTap={{ rotate: 360 }}\n        transition={{\n          type: \"spring\",\n        }}\n      />\n    </div>\n  );\n}\n\nfunction ProjectPoster({\n  children,\n  whileHover,\n  variants,\n  onClick,\n  onMouseLeave,\n}: {\n  children: React.ReactNode;\n  whileHover?: HoverHandlers[\"whileHover\"];\n  variants?: AnimationProps[\"variants\"];\n  onClick?: () => void;\n  onMouseLeave?: () => void;\n}) {\n  return (\n    <motion.div\n      className={cx(\"project-poster\", { clickable: Boolean(onClick) })}\n      whileHover={whileHover}\n      variants={variants}\n      onMouseLeave={onMouseLeave}\n      onClick={onClick}\n    >\n      {children}\n    </motion.div>\n  );\n}\n\nfunction ProjectTitle({ title }: { title: React.ReactNode }) {\n  return <header className=\"project-title\">{title}</header>;\n}\n\nfunction ActivitySuggestion(props: { thingToDo: string | undefined }) {\n  const { thingToDo } = props;\n  return (\n    <div className=\"activity-suggestion\">\n      While I build this, why don't you...\n      {thingToDo && (\n        <motion.div initial={{ y: -500 }} animate={{ y: 0 }}>\n          {thingToDo}?\n        </motion.div>\n      )}\n    </div>\n  );\n}\n\n/**\n * @example\n *         <Knob\n          onDrag={({ x }) => setHueRotate(x)}\n          drag=\"x\"\n          dragConstraints={{\n            left: 0,\n            right: (containerRect?.right ?? window.innerWidth) - 30,\n          }}\n        >\n          ðŸŽ¨\n        </Knob>\n        <Knob\n          onDrag={({ y }) =>\n            setBrightness(\n              1 - y / ((containerRect?.height ?? window.innerWidth) - 30)\n            )\n          }\n          drag=\"y\"\n          dragConstraints={{\n            top: 0,\n            bottom: (containerRect?.bottom ?? window.innerHeight) - 30,\n          }}\n        >\n          ðŸ’¡\n        </Knob>\n */\nfunction Knob({\n  children,\n  onDrag,\n  ...draggableProps\n}: React.PropsWithChildren<\n  {\n    onDrag: ({ x, y }: { x: number; y: number }) => void;\n  } & Omit<DraggableProps, \"onDrag\">\n>) {\n  const handleDrag = useCallback(\n    (_e, { point: { x, y } }: PanInfo) => {\n      onDrag({ x, y });\n    },\n    [onDrag]\n  );\n\n  return (\n    <motion.div\n      className=\"knob\"\n      drag\n      whileDrag={{ scale: 1.1 }}\n      whileTap={{ cursor: \"grabbing\" }}\n      onDrag={handleDrag}\n      dragMomentum={false}\n      {...draggableProps}\n    >\n      {children}\n    </motion.div>\n  );\n}\n\nfunction getRandomColor() {\n  const randomHex = Math.floor(Math.random() * 16777215).toString(16);\n  return `#${randomHex.length < 6 ? randomHex + \"a\" : randomHex}`;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}